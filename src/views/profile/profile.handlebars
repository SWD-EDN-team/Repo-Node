<html lang="vi">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Profile Form</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      {{!-- .profile-img { width: 80px; height: 80px; border-radius: 50%; object-fit:
      cover; } .edit-icon { position: absolute; bottom: 5px; right: 5px;
      background: white; border-radius: 50%; padding: 5px; } --}}
      .filepond--root {
          border: 2px dashed #4CAF50 !important;
          border-radius: 12px !important;
          background-color: #f8f9fa !important;
      }

      .filepond--drop-label {
          color: #333 !important;
          font-size: 16px;
          font-weight: bold;
      }

      .filepond--file-action-button {
          background-color: #4CAF50 !important;
          color: white !important;
      }

      .filepond--panel-root {
          border-radius: 50% !important;
      }

      .filepond--image-preview-wrapper {
          border-radius: 50% !important;
          overflow: hidden !important;
      }
      .avatar-container {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          margin-top: 20px;
      }

      /* Avatar wrapper */
      .avatar-wrapper {
          position: relative;
          width: 120px;
          height: 120px;
          border-radius: 50%;
          overflow: hidden;
          border: 3px solid #3498db;
          transition: 0.3s;
      }

      /* Avatar image */
      .profile-img {
          width: 100%;
          height: 100%;
          object-fit: cover;
          border-radius: 50%;
      }

      /* Overlay effect when hover */
      .upload-overlay {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.5);
          display: flex;
          justify-content: center;
          align-items: center;
          color: white;
          font-size: 20px;
          opacity: 0;
          transition: opacity 0.3s ease-in-out;
          cursor: pointer;
      }

      .upload-overlay i {
          font-size: 24px;
      }

      /* Hiển thị overlay khi hover */
      .avatar-wrapper:hover .upload-overlay {
          opacity: 1;
      }
      #avatar-input {
          display: none;
      }

    </style>
    <link href="https://unpkg.com/filepond/dist/filepond.css" rel="stylesheet">
    </head>
<body class="p-4">
  <div class="container d-flex">

    <!-- Main Content -->
    <div class="flex-grow-1">
      <!-- Profile Section -->
    <div class="d-flex align-items-center justify-content-between mb-4">
        <!-- Avatar Container -->
      <div class="d-flex align-items-center">
          <!-- Avatar -->
          <div class="avatar-container me-3">
              <div class="avatar-wrapper">
                  <img id="profile-img" src="{{user.avatar}}" alt="Profile Picture" class="profile-img" />
                  <label for="avatar-input" class="upload-overlay">
                      <i class="fas fa-camera"></i>
                  </label>
              </div>
              <input type="file" id="avatar-input" name="avatar" accept="image/*">
          </div>

          <!-- Tên người dùng -->
          <h2 class="fs-4 fw-bold mb-0">{{user.name}}</h2> <!-- Tăng size chữ và đậm -->
      </div>

        <!-- Nút thêm bên phải -->
        <button id="add-button" class="btn btn-primary">Đăng kí trở thành Seller ngay!</button>
    </div>

    <!-- Form Section -->
      <form id="user-form">
          <div class="row mb-3">
              <div class="col-md-6">
                  <label class="form-label">Full Name</label>
                  <div class="input-group">
                      <input type="text" class="form-control" id="name" value="{{user.name}}" readonly />
                      <button type="button" class="btn btn-outline-primary edit-btn">Edit</button>
                  </div>
              </div>
          </div>

          <div class="row mb-3">
              <div class="col-md-6">
                  <label class="form-label">Email Address</label>
                  <div class="input-group">
                      <input type="email" class="form-control" id="email" value="{{user.email}}" readonly />
                  </div>
              </div>
              <div class="col-md-6">
                  <label class="form-label">Role</label>
                  <div class="input-group">
                      <input type="text" class="form-control" id="role" value="{{user.role}}" readonly />
                  </div>
              </div>
          </div>
  
          <div class="row mb-3">
              <div class="col-md-6">
                  <label class="form-label">Gender</label>
                  <div class="input-group">
                      <!-- Dropdown thay vì input -->
                      <select class="form-control" id="gender" disabled>
                          <option value="male" {{#if (eq user.gender 'male')}}selected{{/if}}>male</option>
                          <option value="female" {{#if (eq user.gender 'female')}}selected{{/if}}>female</option>
                          <option value="other" {{#if (eq user.gender 'other')}}selected{{/if}}>other</option>
                      </select>
                      <button type="button" class="btn btn-outline-primary edit-btn">Edit</button>
                  </div>
              </div>
          </div>
      </form>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://unpkg.com/filepond/dist/filepond.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
        const avatarImg = document.getElementById("profile-img");
        const inputFile = document.getElementById("avatar-input");

        // Khi click vào avatar -> mở hộp thoại chọn file
        avatarImg.addEventListener("click", function () {
            inputFile.click();
        });

        // Khi chọn ảnh -> cập nhật preview & gửi lên server
        inputFile.addEventListener("change", function (event) {
            const file = event.target.files[0];
            if (file) {
                // Hiển thị ảnh mới ngay lập tức
                avatarImg.src = URL.createObjectURL(file);

                // Tạo FormData để gửi file lên server
                const formData = new FormData();
                formData.append("avatar", file);
                
                // Lấy token từ LocalStorage hoặc sessionStorage
                const token = localStorage.getItem("token"); 

                // Gửi ảnh lên server bằng Fetch API
                fetch("/api/v1/users/upload-avatar", {
                    method: "POST",
                    body: formData,
                    headers: {
                    "Authorization": `Bearer ${token}` 
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        avatarImg.src = data.avatarPath;
                        alert("Cập nhật Avatar thành công");
                        location.reload();
                    } else {
                        alert("Lỗi khi cập nhật avatar.");
                    }
                })
                .catch(error => console.error("Lỗi:", error));
            }
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
    const editButtons = document.querySelectorAll(".edit-btn");

        editButtons.forEach(button => {
        button.addEventListener("click", function () {
            const field = this.previousElementSibling; // Lấy input hoặc select bên cạnh nút
            
            if (field) {
                if (field.tagName === "INPUT") {
                    // Xử lý input (text)
                    if (field.readOnly) {
                        field.readOnly = false;
                        field.focus();
                        this.textContent = "Save"; 
                        this.classList.replace("btn-outline-primary", "btn-success");
                    } else {
                        field.readOnly = true;
                        this.textContent = "Edit"; 
                        this.classList.replace("btn-success", "btn-outline-primary");

                        updateUserData(field.id, field.value);
                    }
                } else if (field.tagName === "SELECT") {
                    // Xử lý select (dropdown)
                    if (field.disabled) {
                        field.disabled = false;
                        this.textContent = "Save"; 
                        this.classList.replace("btn-outline-primary", "btn-success");
                    } else {
                        field.disabled = true;
                        this.textContent = "Edit"; 
                        this.classList.replace("btn-success", "btn-outline-primary");

                        updateUserData(field.id, field.value);
                    }
                }
            }
        });
    });

        function updateUserData(field, value) {
            const token = localStorage.getItem("token"); 
            if (!token) {
                alert("Bạn chưa đăng nhập!");
                return;
            }

            fetch("/api/v1/users/update-info", {
                method: "PUT",
                headers: {
                    "Authorization": `Bearer ${token}`, 
                    "Content-Type": "application/json" 
                },
                body: JSON.stringify({ field, value })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Cập nhật thông tin thành công", data);
                    location.reload();
                } else {
                    alert("Cập nhật thất bại!");
                }
            })
            .catch(error => console.error("Lỗi khi cập nhật:", error));
        }
    });


  </script>
</body>