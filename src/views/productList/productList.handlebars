<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/css/home.css">
</head>
<body>
  <div class="container my-5">
    <div class="row">
      <!-- Sidebar Filter -->
      <aside class="col-md-3">
        <div class="filter-section">
          <h5>Danh mục sản phẩm</h5>
          <ul class="list-unstyled">
            {{#each categories}}
              <li>
                <input type="checkbox" class="filter-category" value="{{this._id}}" id="cat-{{this._id}}">
                <label for="cat-{{this.id}}">{{this.category_name}}</label>
              </li>
            {{/each}}
          </ul>

        <h5>Lọc theo giá</h5>
        <input type="range" id="priceRange" min="0" max="2000000" step="50" value="0">
        <p>Giá tối đa:<span id="priceValue">0</span>₫</p>

        <h5>Lọc theo màu sắc</h5>
        <ul class="list-unstyled">
        {{#each colors}}
            <li>
            <input type="checkbox" class="filter-color" value="{{this.name}}" id="color-{{this.name}}">
            <label for="color-{{this.name}}">
                {{this.name}} 
            </label>
            </li>
        {{/each}}
        </ul>

        <h5>Lọc theo kích thước</h5>
        <ul class="list-unstyled">
        {{#each sizes}}
            <li>
            <input type="checkbox" class="filter-size" value="{{this.name}}" id="size-{{this.name}}">
            <label for="size-{{this.name}}">{{this.name}}</label>
            </li>
        {{/each}}
        </ul>

          <button id="applyFilters" class="btn btn-primary">Áp dụng bộ lọc</button>
        </div>
      </aside>

      <!-- Danh sách sản phẩm -->
      <main class="col-md-9">
        <section id="product-list" class="row">
          {{#each products}}
            {{> productCard}}
          {{/each}}
        </section>

        <!-- Phân trang -->
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center">
            {{#if (gt currentPage 1)}}
              <li class="page-item">
                <a class="page-link" href="/view/products/page/{{subtract currentPage 1}}">« Trước</a>
              </li>
            {{/if}}

            {{#each (range 1 totalPages)}}
              <li class="page-item {{#if (eq this ../currentPage)}}active{{/if}}">
                <a class="page-link" href="/view/products/page/{{this}}">{{this}}</a>
              </li>
            {{/each}}

            {{#if (lt currentPage totalPages)}}
              <li class="page-item">
                <a class="page-link" href="/view/products/page/{{add currentPage 1}}">Sau »</a>
              </li>
            {{/if}}
          </ul>
        </nav>
      </main>
    </div>
  </div>

<script>
    document.getElementById("applyFilters").addEventListener("click", function () {
        loadPage(1); // Khi áp dụng bộ lọc, luôn tải trang 1
    });

    async function loadPage(page) {
        let selectedCategories = [...document.querySelectorAll(".filter-category:checked")].map(el => el.value);
        let selectedColors = [...document.querySelectorAll(".filter-color:checked")].map(el => el.value);
        let selectedSizes = [...document.querySelectorAll(".filter-size:checked")].map(el => el.value);
        let selectedPrice = document.getElementById("priceRange").value;

        let queryParams = new URLSearchParams({
            categories: selectedCategories.join(","),
            colors: selectedColors.join(","),
            sizes: selectedSizes.join(","),
            maxPrice: selectedPrice,
            page: page
        });

        try {
            let response = await fetch(`/view/products/filter?${queryParams.toString()}`);
            let result = await response.json();

            let productContainer = document.getElementById("product-list");
            let paginationContainer = document.querySelector(".pagination");

            productContainer.innerHTML = ""; // Xóa danh sách sản phẩm cũ
            paginationContainer.innerHTML = ""; // Xóa phân trang cũ

            if (result.success) {
                if (result.data.length === 0) {
                    // Không có sản phẩm nào
                    productContainer.innerHTML = `<p class="text-center text-muted">Không có sản phẩm nào phù hợp.</p>`;
                    return;
                }

                // Render danh sách sản phẩm
                result.data.forEach(product => {
                    productContainer.innerHTML += `
                        <div class="col-md-3 col-sm-6 mb-4">
                            <div class="card border-0 shadow-sm product-card" data-id="${product._id}" style="height: 400px;">
                                <img src="${product.image[0]}" class="card-img-top" alt="${product.product_name}" style="height: 200px;">
                                <div class="card-body">
                                    <h5 class="card-title">${product.product_name}</h5>
                                    <p class="text-muted">${product.description}</p>
                                    <p class="fw-bold">$${product.price}</p>
                                </div>
                            </div>
                        </div>
                    `;
                });

                // Cập nhật phân trang
                if (result.totalPages > 1) {
                    if (result.currentPage > 1) {
                        paginationContainer.innerHTML += `
                            <li class="page-item">
                                <a class="page-link" href="#" onclick="loadPage(${result.currentPage - 1})">« Trước</a>
                            </li>
                        `;
                    }

                    for (let i = 1; i <= result.totalPages; i++) {
                        paginationContainer.innerHTML += `
                            <li class="page-item ${i === result.currentPage ? 'active' : ''}">
                                <a class="page-link" href="#" onclick="loadPage(${i})">${i}</a>
                            </li>
                        `;
                    }

                    if (result.currentPage < result.totalPages) {
                        paginationContainer.innerHTML += `
                            <li class="page-item">
                                <a class="page-link" href="#" onclick="loadPage(${result.currentPage + 1})">Sau »</a>
                            </li>
                        `;
                    }
                }
            }

        } catch (error) {
            console.error("Lỗi khi tải dữ liệu sản phẩm:", error);
        }
    }


    const priceRange = document.getElementById("priceRange");
    const priceValue = document.getElementById("priceValue");

    priceRange.addEventListener("input", function () {
        priceValue.textContent = this.value;
    });
    document.getElementById("product-list").addEventListener("click", function (event) {
        const card = event.target.closest(".product-card");
        if (card) {
            const productId = card.getAttribute("data-id");
            if (productId) {
                window.location.href = `/view/detailProduct/${productId}`;
            }
        }
    });
</script>

</body>

</html>