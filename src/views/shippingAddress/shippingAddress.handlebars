<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Shipping Address</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
    />
    <link rel="stylesheet" href="/css/shippingAddress.css" />
  </head>
  <body>
    <div class="container address-template py-4">
      <div class="headerContainer">
        <div class="shipping">
          <h2 class="mb-3">Shipping Address</h2>
          <div class="steps d-flex align-items-center">
            <div class="text-center me-2">
              <div class="address p-2 bg-light rounded-circle">
                <i class="fas fa-home"></i>
              </div>
              <span>Address</span>
            </div>
            <div class="line flex-grow-1 border-top"></div>
            <div class="text-center mx-2">
              <div class="address p-2 bg-light rounded-circle">
                <i class="fas fa-credit-card"></i>
              </div>
              <span>Payment Method</span>
            </div>
            <div class="line flex-grow-1 border-top"></div>
            <div class="text-center ms-2">
              <div class="address p-2 bg-light rounded-circle">
                <i class="fas fa-file-alt"></i>
              </div>
              <span>Review</span>
            </div>
          </div>
          <h5 class="mt-4">Select a delivery address</h5>
          <p>
            Is the address you'd like to use displayed below? If so, click the
            corresponding "Deliver to this address" button. Or you can enter a
            new delivery address.
          </p>
          <div id="address-list" class="row g-3">
            {{#each shippingAddress}}
            <div class="col-md-6">
              <div class="address-card border p-3 rounded" data-id="{{id}}">
                <div class="card-header d-flex justify-content-between">
                  <strong>{{name}}</strong>
                  <input type="checkbox" />
                </div>
                <p class="mb-1">{{address}}</p>
                <p class="text-muted">4517 Washington Ave. Manchester, Kentucky 39495</p>
                <div class="card-actions d-flex justify-content-between">
                  <button class="btn btn-outline-primary btn-sm edit-btn">
                    <i class="fas fa-edit"></i> Edit
                  </button>
                  <button class="btn btn-outline-danger btn-sm delete-btn">
                    <i class="fas fa-trash"></i> Delete
                  </button>
                </div>
              </div>
            </div>
            {{/each}}
          </div>
          <button class="btn btn-dark mt-3 deliver-btn">Deliver Here</button>
        </div>
        {{!-- <div class="summary border p-3 rounded mt-4">
          <div class="subtotal d-flex justify-content-between">
            <h3 class="subtotalText">Subtotal</h3>
            <span>$200.00</span>
          </div>
          <p class="mt-3">Enter Discount Code</p>
          <div class="discount input-group">
            <input type="text" class="form-control" value="FLAT50" />
            <button class="btn btn-dark">Apply</button>
          </div>
          <div class="delivery d-flex justify-content-between mt-3">
            <h3>Delivery Charge</h3>
            <span>$5.00</span>
          </div>
          <h2 class="d-flex justify-content-between mt-3">
            Grand Total <span>$205.00</span>
          </h2>
        </div> --}}
        <div class="col-md-5">
            <div class="card p-4 shadow-lg">
                <h5>Subtotal <span class="float-end">$200.00</span></h5>
                <div class="mb-3">
                    <label class="form-label">Enter Discount Code</label>
                    <div class="input-group">
                        <input type="text" class="form-control" id="discountCode" placeholder="FLAT50">
                        <button class="btn btn-dark" id="addDiscountCode">Apply</button>
                    </div>
                </div>
                <h6>Delivery Charge <span class="float-end">$5.00</span></h6>
                <hr>
                <h4 class="fw-bold">Grand Total <span id="grandTotal" class="float-end">$205.00</span></h4>
            </div>
          </div>
      </div>
      <div class="address-form mt-4">
        <h2>Add a new address</h2>
        <form id="addressForm" class="row g-3">
          <div class="col-md-6">
            <label class="form-label">Country</label>
            <select class="form-select" name="country">
              <option value disabled selected>Select Country</option>
              <option value="vietnam">Vietnam</option>
            </select>
          </div>
          <div class="col-md-6">
            <label class="form-label">City</label>
            <select class="form-select" name="city">
              <option value disabled selected>Select City</option>
              <option value="hanoi">Hà Nội</option>
              <option value="hcm">Hồ Chí Minh</option>
              <option value="danang">Đà Nẵng</option>
            </select>
          </div>
          <div class="col-md-6">
            <label class="form-label">Street</label>
            <input type="text" class="form-control" name="street" placeholder="Enter Street" />
          </div>
          <div class="col-md-12">
            <div class="form-check">
              <input type="checkbox" class="form-check-input" id="defaultAddress" />
              <label for="defaultAddress" class="form-check-label">
                Use as my default address
              </label>
            </div>
          </div>
          <div class="col-12">
            <button type="submit" class="btn btn-dark w-100">Add New Address</button>
          </div>
        </form>
      </div>
    </div>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
    ></script>
  </body>
</html>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    let subtotal = 200.00; 
    let deliveryCharge = 5.00;
    let grandTotal = subtotal + deliveryCharge;
    function updateTotal(newTotal) {
        document.getElementById("grandTotal").innerText = `$${newTotal.toFixed(2)}`;
    }
    updateTotal(grandTotal);
    document.getElementById("addDiscountCode").addEventListener("click", function(event){
        event.preventDefault();
        let discountCode = document.getElementById("discountCode").value.trim();
        let discountAmount = discountCode === "FLAT50" ? 50.00 : 0;
        grandTotal = subtotal + deliveryCharge - discountAmount;
        if (grandTotal < 0) grandTotal = 0; 
        updateTotal(grandTotal);
    });
    document.querySelector("form").addEventListener("submit", function (event) {
        event.preventDefault();
        let discountCode = document.getElementById("discountCode").value.trim();
        let paymentData = {
            subtotal: subtotal,
            deliveryCharge: deliveryCharge,
            discountCode: discountCode,
            grandTotal: grandTotal,
        };
        console.log("Sending payment data:", paymentData);
        fetch("http://localhost:8081/api/payment", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(paymentData)
        })
        .then(response => response.json())
        .then(data => {
            console.log("Payment response:", data);
            alert("Payment successful!");
        })
        .catch(error => {
            console.error("Error:", error);
        });
    });
});

</script>
<script>
  
  async function fetchShippingAddresses() {
    try {
        const token = localStorage.getItem("token");
        if (!token) {
            console.error("Không tìm thấy token. Vui lòng đăng nhập.");
            return;
        }

        // Gửi request bằng Axios
        const response = await axios.get("http://localhost:8081/api/v1/address", {
            headers: { Authorization: `Bearer ${token}` }
        });

        console.log(response.data);

        // Lấy template từ script
        const source = document.getElementById("address-template").innerHTML;
        const template = Handlebars.compile(source);

        // Render dữ liệu vào template
        const html = template({ shippingAddress: response.data });

        // Gán vào DOM
        document.getElementById("address-list").innerHTML = html;

    } catch (error) {
        console.error("Lỗi khi lấy danh sách địa chỉ:", error);
    }
}

// Gọi hàm khi trang tải xong
fetchShippingAddresses();
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("addressForm");
    const addressList = document.querySelector(".address-list");

    form.addEventListener("submit", async function (event) {
      event.preventDefault();

      const country = form.querySelector("select[name='country']").value;
      const city = form.querySelector("select[name='city']").value;
      const street = form.querySelector("input[name='street']").value;

      console.log("Country:", country);
      console.log("City:", city);
      console.log("Street:", street);

      try {
        const token = localStorage.getItem("token");

        if (!token) {
          alert("No token found. Please login again.");
          return;
        }

        const response = await axios.post("http://localhost:8081/api/v1/address", 
          { country, city, street }, 
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );

        console.log("Response:", response.data);
        const source = document.getElementById("address-template").innerHTML;
        const template = Handlebars.compile(source);

        // Render dữ liệu vào template
        const html = template({ shippingAddress: response.data });

        // Gán vào DOM
        document.getElementById("address-list").innerHTML = html;

        // Chuyển hướng nếu thành công
        window.location.href = "/view/home";

      } catch (error) {
        console.error("Error:", error);
        alert("Login error. Please login again.");
      }
    });
    addressList.addEventListener("click", async function (event) {
  const button = event.target.closest(".delete-btn");
  const addressCard = button.closest(".address-card"); 
  if (!addressCard) {
    console.error("Không tìm thấy phần tử chứa địa chỉ.");
    return;
  }

  const addressId = addressCard.dataset.id;
  console.log("addressCard:",addressCard);
  console.log("addressId:",addressId)
  if (!addressId) {
    console.error("Address ID bị thiếu.");
    return;
  }

  console.log("addressCard:", addressCard);
  console.log("addressId:", addressId);

 try {
        const token = localStorage.getItem("token");
        if (!token) {
          alert("No token found. Please login again.");
          return;
        }
        const response = await axios.delete(`http://localhost:8081/api/v1/address/${addressId}`, 
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );
        console.log("Response:", response.data);
        {{!-- window.location.href = "/view/home"; --}}
      } catch (error) {
        console.error("Error:", error);
        alert("Error deleting address. Please try again.");
      }
});
  });
</script>