<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
    .sidebar {
        display: none !important;
    }
    .checkout-container {

    margin: auto;
    padding: 20px;
    }

    .checkout-content {
        display: flex;
        justify-content: space-between;
        gap: 20px;
    }

    .checkout-table {
        width: 100%;
        border-collapse: collapse;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }

    .checkout-table th, .checkout-table td {
        padding: 15px;
        text-align: left;
    }

    .product-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .product-img {
        width: 50px;
        height: 50px;
        border-radius: 5px;
    }

.quantity {
  display: flex;
  border: 2px solid #000000;
  border-radius: 4px;
  overflow: hidden;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  width: 90%;
}

.quantity button {
  color: #000000;
  background-color: #ffffff;
  border: none;
  font-size: 12px;
  width: 30px;
  height: auto;
  text-align: center;
}


.input-box {
  width: 35px;
  text-align: center;
  border: none;
  padding: 5px 8px;
  font-size: 12px;
  outline: none;
}

/* Hide the number input spin buttons */
.input-box::-webkit-inner-spin-button,
.input-box::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.input-box[type="number"] {
  -moz-appearance: textfield;
}

    .remove-item {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 20px;
    }

    .summary-box {
        width: 50%;
        height: 50%;
        padding: 20px;
        border-radius: 10px;
        background: white;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }

    .discount-box {
        display: flex;
        gap: 10px;
        margin: 10px 0;
    }

    .discount-box input {
        flex: 1;
        padding: 8px;
        border: 1px solid #ddd;
    }

    .apply-btn {
        background: black;
        color: white;
        padding: 8px;
        border: none;
        cursor: pointer;
    }

    .checkout-btn {
        width: 100%;
        background: black;
        color: white;
        padding: 10px;
        border: none;
        cursor: pointer;
        font-size: 16px;
    }

    </style>
</head>
<body>
<div class="checkout-container">
    <h1>Checkout</h1>
    <div class="checkout-content">
        <!-- Bảng sản phẩm -->
        <table class="checkout-table">
            <thead>
                <tr>
                    <th>Products</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Subtotal</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                {{#each cart}}
                <tr>
                    <td class="product-info">
                        <img src="/images/{{this.image}}" class="product-img">
                        <div>
                            <strong>{{this.name}}</strong>
                            <p>Size: {{this.size}}</p>
                        </div>
                    </td>
                    <td>${{this.price}}</td>
                        <td>
                            <div class="quantity">
                                <button class="minus" data-id="{{this.id}}" aria-label="Decrease">&minus;</button>
                                <input type="number" class="input-box" value="{{this.quantity}}" min="1" max="10" data-id="{{this.id}}">
                                <button class="plus" data-id="{{this.id}}" aria-label="Increase">&plus;</button>
                            </div>
                        </td>
                    <td>${{multiply this.price this.quantity}}</td>
                    <td>
                        <button class="remove-item" data-id="{{this.id}}">
                            <i class="fa-solid fa-trash-can"></i>
                        </button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>

        <!-- Tổng tiền -->
        <div class="summary-box">
            <h3>Subtotal: <span>${{calculateSubtotal cart}}</span></h3>
            <p>Delivery Charge: <span>$5.00</span></p>
            <hr>
            <h2>Grand Total: <span>${{add (calculateSubtotal cart) 5}}</span></h2>
            <div class="discount-box">
                <input type="text" placeholder="Enter Discount Code">
                <button class="apply-btn">Apply</button>
            </div>
            <button class="checkout-btn">Proceed to Checkout</button>
        </div>
    </div>
</div>

</body>
</html>
<script>
    (function () {
        const quantityContainer = document.querySelector(".quantity");
        const minusBtn = quantityContainer.querySelector(".minus");
        const plusBtn = quantityContainer.querySelector(".plus");
        const inputBox = quantityContainer.querySelector(".input-box");

        updateButtonStates();

        quantityContainer.addEventListener("click", handleButtonClick);
        inputBox.addEventListener("input", handleQuantityChange);

        function updateButtonStates() {
            const value = parseInt(inputBox.value);
            minusBtn.disabled = value <= 1;
            plusBtn.disabled = value >= parseInt(inputBox.max);
        }

        function handleButtonClick(event) {
            if (event.target.classList.contains("minus")) {
            decreaseValue();
            } else if (event.target.classList.contains("plus")) {
            increaseValue();
            }
        }

        function decreaseValue() {
            let value = parseInt(inputBox.value);
            value = isNaN(value) ? 1 : Math.max(value - 1, 1);
            inputBox.value = value;
            updateButtonStates();
            handleQuantityChange();
        }

        function increaseValue() {
            let value = parseInt(inputBox.value);
            value = isNaN(value) ? 1 : Math.min(value + 1, parseInt(inputBox.max));
            inputBox.value = value;
            updateButtonStates();
            handleQuantityChange();
        }

        function handleQuantityChange() {
            let value = parseInt(inputBox.value);
            value = isNaN(value) ? 1 : value;
        }
        })();

</script>
