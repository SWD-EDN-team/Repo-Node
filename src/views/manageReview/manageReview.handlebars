<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Quản lý Feedback</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body class="bg-light">

  <div class="container mt-5">
    <h2 class="text-center fw-bold mb-4">Quản lý Feedback của Khách Hàng</h2>

    <div class="table-responsive">
      <table class="table table-bordered table-hover shadow-lg bg-white">
          <thead class="table-dark text-center">
              <tr>
                  <th>Customer</th>
                  <th>Feedback</th>
                  <th>Rate</th>
                  <th>Time</th>
                  <th>Hành Động</th>
              </tr>
          </thead>
          <tbody id="reviewTableBody">
          </tbody>
      </table>
    </div>

    <!-- PHÂN TRANG -->
    <div class="d-flex justify-content-between">
      <button id="prevPage" class="btn btn-secondary" disabled>Trước</button>
      <span id="pageInfo" class="align-self-center">Trang 1</span>
      <button id="nextPage" class="btn btn-secondary">Tiếp theo</button>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    let currentPage = 1;
    const itemsPerPage = 5;

    async function fetchReviews(page) {
      try {
        const response = await axios.get(`http://localhost:8081/api/v1/review?page=${page}&limit=5`);
        const reviews = response.data.reviews;
        
        const reviewTableBody = document.getElementById("reviewTableBody");
        reviewTableBody.innerHTML = "";
        
        reviews.forEach(review => {
          reviewTableBody.innerHTML += `
            <tr id="review-${review._id}">
                <td class="text-center fw-bold">${review.user_id.name}</td>
                <td>${review.comment}</td>
                <td class="text-center">${review.rate} ⭐</td>
                <td class="text-center text-muted">${review.createdAt}</td>
                <td>
                    <button onclick="deleteReview('${review._id}')" id="btn-delete-${review._id}" class="btn btn-danger w-100">Xóa</button>
                </td>
            </tr>
          `;
        });
        updatePagination(reviews.length);
      } catch (error) {
        console.error("Lỗi khi lấy dữ liệu feedback:", error);
      }
    }

    function updatePagination(totalItems) {
      document.getElementById("pageInfo").innerText = `Trang ${currentPage}`;
      document.getElementById("prevPage").disabled = currentPage === 1;
      document.getElementById("nextPage").disabled = totalItems < itemsPerPage;
    }

    document.getElementById("prevPage").addEventListener("click", () => {
      if (currentPage > 1) {
        currentPage--;
        fetchReviews(currentPage);
      }
    });

    document.getElementById("nextPage").addEventListener("click", () => {
      currentPage++;
      fetchReviews(currentPage);
    });

    async function deleteReview(reviewId) {
      if (!confirm("Bạn có chắc muốn xóa feedback này không?")) return;

      const deleteButton = document.getElementById(`btn-delete-${reviewId}`);
      if (!deleteButton) {
        alert("Không tìm thấy button xóa. Kiểm tra lại HTML!");
        return;
      }

      deleteButton.disabled = true;
      deleteButton.innerText = "Đang xóa...";

      const token = localStorage.getItem("token");
      if (!token) {
        alert("Bạn chưa đăng nhập!");
        deleteButton.disabled = false;
        deleteButton.innerText = "Xóa";
        return;
      }

      try {
        const response = await axios.delete(`http://localhost:8081/api/v1/review/${reviewId}`, {
          headers: { Authorization: `Bearer ${token}` }
        });

        if (response.data.message === "Review deleted successfully") {
          document.getElementById(`review-${reviewId}`).remove();
        } else {
          alert("Không thể xóa review!");
        }
      } catch (error) {
        console.error("Lỗi khi xóa:", error);
        alert(`Lỗi khi xóa feedback! Chi tiết: ${error.response?.data?.message || "Lỗi không xác định."}`);
      } finally {
        deleteButton.innerText = "Xóa";
        deleteButton.disabled = false;
      }
    }

    fetchReviews(currentPage);
  </script>
</body>
</html>
