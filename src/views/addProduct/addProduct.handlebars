<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
</head>
<body>
<div class="container mt-5">
    <div class="card shadow-lg p-4">
        <h2 class="mb-4 text-center text-primary">Add Product</h2>
        <form id="addProductForm">
            <div class="mb-3">
                <label for="product_name" class="form-label fw-bold">Product Name</label>
                <input type="text" class="form-control" id="product_name" name="product_name" required placeholder="Enter product name">
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="price" class="form-label fw-bold">Price</label>
                    <input type="number" class="form-control" id="price" name="price" required placeholder="Enter price">
                </div>
                <div class="col-md-6 mb-3">
                    <label for="stoke_quantity" class="form-label fw-bold">Stock Quantity</label>
                    <input type="number" class="form-control" id="stoke_quantity" name="stoke_quantity" required placeholder="Enter stock quantity">
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="color" class="form-label fw-bold">Color</label>
                    <input type="text" class="form-control" id="color" name="color" placeholder="Enter color">
                </div>
                <div class="col-md-6 mb-3">
                    <label for="size" class="form-label fw-bold">Size</label>
                    <input type="text" class="form-control" id="size" name="size" placeholder="Enter size">
                </div>
            </div>
            <div class="mb-3">
                <label for="category" class="form-label fw-bold">Category</label>
                <select class="form-select" id="category" name="category" required>
                    <option value="" disabled selected>Select a category</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="image" class="form-label fw-bold">Product Image</label>
                <input type="file" class="form-control" id="image" name="image" accept="image/*" multiple>
            </div>
            <div class="mb-3">
                <label for="description" class="form-label fw-bold">Description</label>
                <textarea class="form-control" id="description" name="description" rows="3" placeholder="Enter product description"></textarea>
            </div>
            <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-lg">Add Product</button>
            </div>
        </form>
    </div>
</div>
</body>
</html>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded",async function () {
     try {
        const response = await axios.get("http://localhost:8081/api/v1/category");
        const categories = response.data;
        const categorySelect = document.getElementById("category");
        categories.forEach(category => {
            const option = document.createElement("option");
            option.value = category._id; 
            option.textContent = category.category_name; 
            categorySelect.appendChild(option);
        });
            console.log("Category selected:", category);
    } catch (error) {
        console.error("Error fetching categories:", error);
    }
    document.getElementById("addProductForm").addEventListener("submit", async function (event) {
        event.preventDefault();
        const product_name = document.getElementById("product_name").value;
        const price = document.getElementById("price").value;
        const stoke_quantity = document.getElementById("stoke_quantity").value;
        const color = document.getElementById("color").value.split(",").map(c => c.trim());
        const size = document.getElementById("size").value.split(",").map(c => c.trim());
        const category = document.getElementById("category").value;
        const image = document.getElementById("image").files;
        const description = document.getElementById("description").value;
        if (!product_name || !category) {
            alert("Please fill in all required fields.");
            return;
        }
        const imageArray = [];

        for (let i = 0; i < image.length; i++) {
            imageArray.push(image[i]);
        }
        const formData = new FormData();
        formData.append("product_name", product_name);
        formData.append("price", price);
        formData.append("stoke_quantity", stoke_quantity);
        formData.append("color", JSON.stringify(color));
        formData.append("size", JSON.stringify(size)); 
        formData.append("category_id", category);
        imageArray.forEach((file) => {
            formData.append("image", file); 
        });

        formData.append("description", description);
        console.log("Form Data Submitted:", {
            product_name,
            price,
            stoke_quantity,
            color:[color],
            size:[size],
            category,
            images: Array.from(images).map(img => img.name),
            description
        });
        try {
            const response = await axios.post("http://localhost:8081/api/v1/product", formData,{ 
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${localStorage.getItem("token")}`
                },
            });
            if (response.status === 200) {
                alert("Product added successfully!");
                document.getElementById("addProductForm").reset();
            } else {
                alert("Error: " + response.data.message);
            }
        } catch (error) {
            console.error("Error submitting form:", error);
            alert("Failed to add product.");
        }
    });
});
</script>
